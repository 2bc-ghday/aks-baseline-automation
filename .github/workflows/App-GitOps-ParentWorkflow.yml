# This is the parent orchestrating workflow that coordinates
# 1. AKS and Infrastructure creation
# 2. Application building and storage in ACR
# 3. GitOps configuration of app deployment

name: Application GitOps

on:
  workflow_dispatch:
    inputs:
      Environment:
        description: 'A GitHub Environment to pull action secrets from'
        type: environment
        required: false
        default: cset
      ResourceGroup:
        description: 'Resource Group Name'
        type: string
        required: true
        default: 'AppsGitOps'

jobs:
  ReusableWF:
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT: ${{ github.event.inputs.Environment }}
      RG: ${{ github.event.inputs.ResourceGroup }}
    steps:
      - name: Dummy step
        run: echo "Resuable workflows can't be directly reference ENV/INPUTS (yet)"
        
  Deploy:
    #This job deploys all of the infrastucture using AKS Construction
    #The GitHub workflow config was created using the Deployment Helper.
    #EDIT THIS CONFIG HERE: https://azure.github.io/AKS-Construction/?deploy.clusterAdminRole=false&deploy.clusterIPWhitelist=false&deploy.kvCertSecretRole=false&deploy.acrPushRole=false&cluster.agentCount=1&cluster.maxCount=3&cluster.upgradeChannel=node-image&cluster.apisecurity=none&addons.registry=Standard&addons.ingress=none&addons.networkPolicy=azure&addons.csisecret=none&net.vnet_opt=default&net.aksOutboundTrafficType=managedNATGateway&net.natGwIpCount=2
    needs: [ReusableWF]
    uses: Azure/AKS-Construction/.github/workflows/AKSC_Deploy.yml@main
    with:
      environment: ${{ needs.ReusableWF.outputs.ENVIRONMENT }}
      templateVersion: 0.8.8
      rg: ${{ needs.ReusableWF.outputs.RG }}
      resourceName: az-k8s-cv8j
      templateParams: resourceName=az-k8s-cv8j agentCount=1 upgradeChannel=node-image agentCountMax=3 enable_aad=true AksDisableLocalAccounts=true enableAzureRBAC=true registries_sku=Standard omsagent=true retentionInDays=30 networkPolicy=azure azurepolicy=audit aksOutboundTrafficType=managedNATGateway
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
  DockerBuildPushACR:
    needs: [ReusableWF, Deploy]
    uses: ./.github/workflows/App-AzureVote-DockerBuild-Actions.yml
    with:
      ENVIRONMENT: ${{ needs.ReusableWF.outputs.ENVIRONMENT }}
      RG: ${{ needs.ReusableWF.outputs.RG }}
      AKSNAME: ${{ needs.Deploy.outputs.AKSNAME}}
      ACRNAME: ${{ needs.Deploy.outputs.ACRNAME}}
      APPNAME: basevote2
      JUSTBUILDPUSH: true
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
  GitOpsAppDeploy:
    needs: [ReusableWF, Deploy, DockerBuildPushACR]
    uses: ./.github/workflows/App-Gitops.yml
    with:
      ENVIRONMENT: ${{ needs.ReusableWF.outputs.ENVIRONMENT }}
      RG: ${{ needs.ReusableWF.outputs.RG }}
      AKSNAME: ${{ needs.Deploy.outputs.AKSNAME}}
      ACRNAME: ${{ needs.Deploy.outputs.ACRNAME}}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
